sce <- readRDS("/mnt/taupo/Shared_taupo/data/seq/calini_scrnaseq_output/crab_eating_macaque/seurat_V3integration_SCE_scaternorm.rds")
library(Matrix)
library(ggplot2)
x <- "CDH18"
df <- as.data.frame(sce@reducedDims$tsne)
df[[x]] <- as.numeric(logcounts(sce)[grep(paste0("\\.",x,"$"), row.names(sce)),])
ggplot(df, aes("tSNE_1", "tSNE_2", colour=x)) + geom_point()
head(df)
ggplot(df, aes("tSNE_1", "tSNE_2", colour=x)) + geom_points()
ggplot(df, aes_string("tSNE_1", "tSNE_2", colour=x)) + geom_point()
library(cowplot)
ggplot(df, aes_string("tSNE_1", "tSNE_2", colour=x)) + geom_point(size=1)
de <- read.delim("~/bioinfo/robinson/calini_scrnaseq/crab_eating_macaque/Lake_human_brain_pairwise_deg_celltypes.txt",header=T)
head(de)
View(de)
rdpl <- function(x, pt.size=1){
df <- as.data.frame(sce@reducedDims$tsne)
df[[x]] <- as.numeric(logcounts(sce)[grep(paste0("\\.",x,"$"), row.names(sce)),])
ggplot(df, aes_string("tSNE_1", "tSNE_2", colour=x)) + geom_point(size=pt.size)
}
rdpl("UNC5C")
rdpl("FRMPD4")
rdpl("INPP4B")
rdpl("CNTNAP5")
rdpl("NPAS3")
rdpl("NRG3")
de2 <- de[which(de$pct.1 > 0.75 & de$pct.2 < 0.2 & de$p_val_adj < 0.00001),]
dim(de2)
View(de2)
rdpl("LRRTM4")
rdpl("ROBO2")
rdpl("FRMD4A")
rdpl("LHFPL3")
rdpl("DSCAM")
rdpl("MRC1")
rdpl("SLC8A1")
rdpl("DOCK8")
rdpl("SOX6")
rdpl("ATXN2")
markers <- c("OPALIN","PDGFRA","SNAP25","GAD1","CHD5","ITPR1","INPP4B","GABRA6","Slc1a3","Sparcl1","NPAS3","SOX6")
pl <- lapply(markers, FUN=rdpl)
plot_grid(pl, nrow=4)
head(df)
ag <- aggregate(df, by=sce$cluster_id, FUN=mean)
ag <- aggregate(df, by=list(cluster=sce$cluster_id), FUN=mean)
head(ag)
p <- rdpl("ATXN2")
p + geom_text(data=ag, aes(tSNE_1, tSNE2, label=cluster))
p + geom_text(data=ag, aes(tSNE_1, tSNE_2, label=cluster))
annotate(p, x=ag$tSNE_1, y=ag$tSNE_2, label=ag$cluster)
p + annotate(x=ag$tSNE_1, y=ag$tSNE_2, label=ag$cluster)
p + annotate("text", x=ag$tSNE_1, y=ag$tSNE_2, label=ag$cluster)
p + annotate("text", x=ag$tSNE_1, y=ag$tSNE_2, label=ag$cluster, size=10)
p + annotate("text", x=ag$tSNE_1, y=ag$tSNE_2, label=ag$cluster, size=6)
p + annotate("text", x=ag$tSNE_1, y=ag$tSNE_2, label=ag$cluster, size=6, col="orange")
p + annotate("text", x=ag$tSNE_1, y=ag$tSNE_2, label=ag$cluster, size=6, col="darkorange")
p + annotate("text", x=ag$tSNE_1, y=ag$tSNE_2, label=ag$cluster, size=6, col="red")
p + annotate("text", x=ag$tSNE_1, y=ag$tSNE_2, label=ag$cluster, size=6, col="red", fill="white")
p + ggplot(ag, aes(x=tSNE_1, y=tSNE_2, label=cluster, size=6, col="white", fill="CDH18")
)
p + geom_text(data=ag, aes(x=tSNE_1, y=tSNE_2, label=cluster, size=6, col="white", fill="CDH18"))
p + geom_text(data=ag, aes(x=tSNE_1, y=tSNE_2, label=cluster, size=6, col="white", fill=CDH18))
p + geom_text(data=ag, aes(x=tSNE_1, y=tSNE_2, label=cluster))
p + geom_text(data=ag, aes(x=tSNE_1, y=tSNE_2, label=cluster))
head(ag)
p <- rdpl("CDH18")
p + geom_text(data=ag, aes(x=tSNE_1, y=tSNE_2, label=cluster))
p + geom_text(data=ag, aes(x=tSNE_1, y=tSNE_2, label=cluster, col="white", fill=CDH18))
p + geom_text(data=ag, aes(x=tSNE_1, y=tSNE_2, label=cluster, col=CDH18))
p + geom_text(data=ag, aes(x=tSNE_1, y=tSNE_2, label=cluster, fill=CDH18))
p + geom_text(data=ag, aes(x=tSNE_1, y=tSNE_2, label=cluster)) + geom_label(aes(fill=CDH18))
p + geom_text(data=ag, aes(x=tSNE_1, y=tSNE_2, label=cluster)) + geom_label(data=ag, aes(fill=CDH18))
p + geom_text(data=ag, aes(x=tSNE_1, y=tSNE_2, label=cluster)) + geom_label(data=ag, aes(label=cluster, fill=CDH18))
p + geom_text(data=ag, aes(x=tSNE_1, y=tSNE_2, label=cluster)) + geom_label(data=ag, aes(label=cluster, fill=CDH18, legend=F))
p + geom_text(data=ag, aes(x=tSNE_1, y=tSNE_2, label=cluster)) + geom_label(data=ag, aes(label=cluster, fill=CDH18, legend=F)) + scale_color_hue(direction = -1)
p + geom_text(data=ag, aes(x=tSNE_1, y=tSNE_2, label=cluster)) + geom_label(data=ag, aes(label=cluster, fill=CDH18))
p + geom_text(data=ag, aes(x=tSNE_1, y=tSNE_2, label=cluster, color=CDH18)) + geom_label(data=ag, aes(label=cluster, fill="white"))
p + geom_text(data=ag, aes(x=tSNE_1, y=tSNE_2, label=cluster, color=CDH18)) + geom_label(data=ag, aes(label=cluster))
p + geom_text(data=ag, aes(x=tSNE_1, y=tSNE_2, label=cluster, color=CDH18)) + geom_label(data=ag, aes(label=cluster), fill="white")
GTscripts::maketrans("white")
p + geom_text(data=ag, aes(x=tSNE_1, y=tSNE_2, label=cluster, color=CDH18)) + geom_label(data=ag, aes(label=cluster), fill="#FFFFFF64")
GTscripts::maketrans("white",alpha = 150)
p + geom_text(data=ag, aes(x=tSNE_1, y=tSNE_2, label=cluster, color=CDH18)) + geom_label(data=ag, aes(label=cluster), fill="#FFFFFF96")
p + geom_text(data=ag, aes(x=tSNE_1, y=tSNE_2, label=cluster, color=CDH18), vjust = 0, nudge_y = 0.5) + geom_label(data=ag, aes(label=cluster), fill="#FFFFFF96")
p + geom_label(data=ag, aes(label=cluster), fill="#FFFFFF96", vjust = 0, nudge_y = 0.5) + geom_text(data=ag, aes(x=tSNE_1, y=tSNE_2, label=cluster, color=CDH18))
p + geom_label(data=ag, aes(label=cluster, colour=CDH18), fill="#FFFFFF96", vjust = 0, nudge_y = 0.5)
p + geom_label(data=ag, aes(label=cluster, colour=CDH18), fill="#FFFFFF96", vjust = 0, nudge_y = 1)
p + geom_label(data=ag, aes(label=cluster, colour=CDH18), fill="#FFFFFF96", vjust = 0, nudge_y = 0.5) + scale_color_hue(direction = -1)
p + scale_color_hue(direction = -1) + geom_label(data=ag, aes(label=cluster, colour=CDH18), fill="#FFFFFF96", vjust = 0, nudge_y = 0.5)
rdpl <- function(x, pt.size=1, cluster.labels=FALSE, label.size=5){
df <- as.data.frame(sce@reducedDims$tsne)
df[[x]] <- as.numeric(logcounts(sce)[grep(paste0("\\.",x,"$"), row.names(sce), ignore.case = T),])
p <- ggplot(df, aes_string("tSNE_1", "tSNE_2", colour=x)) + geom_point(size=pt.size)
if(!cluster.labels) return(p)
ag <- aggregate(df, by=list(cluster=sce$cluster_id), FUN=mean)
p + geom_label(data=ag, aes_string(label="cluster", colour=x), size=label.size, fontface="bold", fill="#FFFFFF96", vjust = 0, nudge_y = 1)
}
p <- rdpl("ATXN2")
p
p <- rdpl("ATXN2", cluster.labels = T)
p
p <- rdpl("ATXN2", cluster.labels = T, pt.size=0.7)
p
length(unique(sce$Sample))
rdpl <- function(sce, x=NULL, pt.size=0.8, cluster.labels=FALSE, label.size=4){
df <- as.data.frame(sce@reducedDims$tsne)
if(!is.null(x)){
df[[x]] <- as.numeric(logcounts(sce)[grep(paste0("\\.",x,"$"), row.names(sce), ignore.case = T),])
}else{
x <- "cluster"
df[[x]] <- as.factor(sce$cluster_id)
}
p <- ggplot(df, aes_string("tSNE_1", "tSNE_2", colour=x)) + geom_point(size=pt.size)
if(cluster.labels){
ag <- aggregate(df[,which(colnames(df) != "cluster")], by=list(cluster=sce$cluster_id), FUN=mean)
p + geom_label(data=ag, aes_string(label="cluster", colour=x), size=label.size, fontface="bold", fill="#FFFFFF96", vjust = 0, nudge_y = 1)
}
p
}
pl <- cbind(list(clusters=rdpl()), lapply(unique(sce$sample_id), FUN=function(x){
rdpl(sce[,which(sce$sample_id==x)])
}))
pl <- cbind(list(clusters=rdpl()), lapply(unique(sce$sample_id), sce=sce, FUN=function(x, sce){
rdpl(sce[,which(sce$sample_id==x)])
}))
sce
x <- sce$cluster_id[1]
rdpl(sce[,which(sce$sample_id==x)])
rdpl <- function(sce, x=NULL, pt.size=0.8, cluster.labels=FALSE, label.size=4){
df <- as.data.frame(sce@reducedDims$tsne)
if(!is.null(x)){
df[[x]] <- as.numeric(logcounts(sce)[grep(paste0("\\.",x,"$"), row.names(sce), ignore.case = T),])
}else{
x <- "cluster"
df[[x]] <- as.factor(sce$cluster_id)
}
p <- ggplot(df, aes_string("tSNE_1", "tSNE_2", colour=x)) + geom_point(size=pt.size)
if(cluster.labels){
ag <- aggregate(df[,which(colnames(df) != "cluster")], by=list(cluster=sce$cluster_id), FUN=mean)
p + geom_label(data=ag, aes_string(label="cluster", colour=x), size=label.size, fontface="bold", fill="#FFFFFF96", vjust = 0, nudge_y = 1)
}
p
}
rdpl
rdpl(sce[,which(sce$sample_id==x)])
rdpl(sce[,which(sce$sample_id==x)], x="ATXN2")
dim(sce[,which(sce$sample_id==x)])
x
head(sce$sample_id)
pl <- cbind(list(clusters=rdpl(sce)), lapply(unique(sce$sample_id), sce=sce, FUN=function(x, sce){
rdpl(sce[,which(sce$sample_id==x)])
}))
plot_grid(plotlist = pl)
rdpl <- function(sce, x=NULL, pt.size=0.8, cluster.labels=FALSE, label.size=4){
df <- as.data.frame(sce@reducedDims$tsne)
if(!is.null(x)){
df[[x]] <- as.numeric(logcounts(sce)[grep(paste0("\\.",x,"$"), row.names(sce), ignore.case = T),])
}else{
x <- "cluster"
df[[x]] <- as.factor(sce$cluster_id)
}
p <- ggplot(df, aes_string("tSNE_1", "tSNE_2", colour=x)) + geom_point(size=pt.size)
if(cluster.labels){
ag <- aggregate(df[,which(colnames(df) != "cluster")], by=list(cluster=sce$cluster_id), FUN=mean)
p + geom_label(data=ag, aes_string(label="cluster", colour=x), size=label.size, fontface="bold", fill="#FFFFFF96", vjust = 0, nudge_y = 1, show.legend=F)
}
p
}
pl <- cbind(list(clusters=rdpl(sce)), lapply(unique(sce$sample_id), sce=sce, FUN=function(x, sce){
rdpl(sce[,which(sce$sample_id==x)])
}))
length(pl)
unique(sce$sample_id)
pl <- c(list(clusters=rdpl(sce)), lapply(unique(sce$sample_id), sce=sce, FUN=function(x, sce){
rdpl(sce[,which(sce$sample_id==x)])
}))
length(pl)
rdpl <- function(sce, x=NULL, pt.size=0.8, cluster.labels=FALSE, label.size=4){
df <- as.data.frame(sce@reducedDims$tsne)
if(!is.null(x)){
df[[x]] <- as.numeric(logcounts(sce)[grep(paste0("\\.",x,"$"), row.names(sce), ignore.case = T),])
}else{
x <- "cluster"
df[[x]] <- as.factor(sce$cluster_id)
}
p <- ggplot(df, aes_string("tSNE_1", "tSNE_2", colour=x)) + geom_point(size=pt.size)
if(cluster.labels){
ag <- aggregate(df[,which(colnames(df) != "cluster")], by=list(cluster=sce$cluster_id), FUN=mean)
p + geom_label(data=ag, aes_string(label="cluster", colour=x), size=label.size, fontface="bold", fill="#FFFFFF96", vjust = 0, nudge_y = 1, show.legend=F)
}
p
}
pl <- c(list(clusters=rdpl(sce)), lapply(unique(sce$sample_id), sce=sce, FUN=function(x, sce){
pl <- c(list(clusters=rdpl(sce)), lapply(unique(sce$sample_id), sce=sce, FUN=function(x, sce){
rdpl(sce[,which(sce$sample_id==x)])
}))
plot_grid(plotlist = pl)
names(pl)
plot_grid(plotlist = pl, labels = c("All", unique(sce$sample_id)))
pl <- c(list(clusters=rdpl(sce)), lapply(unique(sce$sample_id), sce=sce, FUN=function(x, sce){
rdpl(sce[,which(sce$sample_id==x)])+theme(legend.position="none")
}))
plot_grid(plotlist = pl, labels = c("All", unique(sce$sample_id)))
markers <- c("OPALIN","PDGFRA","SNAP25","GAD1","CHD5","ITPR1","INPP4B","GABRA6","Slc1a3","Sparcl1","NPAS3","SOX6")
pl <- lapply(markers, sce=sce, FUN=function(x, sce){
rdpl(sce,x)
}))
markers <- c("OPALIN","PDGFRA","SNAP25","GAD1","CHD5","ITPR1","INPP4B","GABRA6","Slc1a3","Sparcl1","NPAS3","SOX6")
pl <- lapply(markers, sce=sce, FUN=function(x, sce){
rdpl(sce,x)
})
plot_grid(plotlist = pl)
GTscripts::byheatmap
head(sd)
head(rowData(se))
suppressWarnings({
library(SummarizedExperiment)
})
plag <- function(x, by, agFun=sum, ...){
ag <- aggregate(x,by=list(by),...,FUN=agFun)
row.names(ag) <- ag[,1]; ag[,1] <- NULL
return(ag)
}
cnts <- read.delim("salmon.transcripts.counts",header=T,row.names=1)
tx <- do.call(rbind, strsplit(row.names(e), "|", fixed=T))
suppressWarnings({
library(SummarizedExperiment)
})
plag <- function(x, by, agFun=sum, ...){
ag <- aggregate(x,by=list(by),...,FUN=agFun)
row.names(ag) <- ag[,1]; ag[,1] <- NULL
return(ag)
}
cnts <- read.delim("salmon.transcripts.counts",header=T,row.names=1)
tx <- do.call(rbind, strsplit(row.names(cnts), "|", fixed=T))
len <- read.delim("lengths",header=T,row.names=1)
tx <- cbind(tx,len)
tpm <- read.delim("salmon.transcripts.tpm",header=T,row.names=1)
row.names(tpm) = row.names(cnts) = row.names(tx) <- tx$`1`
tx <- tx[,c(2,6,7,8,10)]
colnames(tx) <- c("gene_id","gene_name","length","biotype","effectiveLength")
tx$length <- as.numeric(as.character(tx$length))
tx$effectiveLength <- as.numeric(as.character(tx$effectiveLength))
d <- data.frame( row.names=colnames(tpm),
tissue=rep(c("Neurons","iPSC","Neurons"),c(10,9,9)),
individual=c("192","242","306","316","339.1","339","809.1","809","CF","MIF",rep(242,18)),
genotype=c("AtWBS","WBS","CTRL","DUP")[1+c(0,3,1,1,2,1,2,3,3,2,1,1,1,2,2,2,3,3,3,2,2,2,1,1,1,3,3,3)],
batch=rep(c("pd.iN","iso.iPSC","iso.iN"),c(10,9,9))
)
se <- SummarizedExperiment( assays = list(counts=cnts, tpm=tpm), colData=d, rowData=tx)
colnames(se) <- paste(rep(c("iN","iPSC","iN"),c(10,9,9)), se$genotype, c("192B_A11","242K_A4","306O_A12","316M_A5", "3391S_A8", "339C7_B4", "8091_A9","8099_A10","CFG_A6","MIFF3_A7", rep(1:3,6)),sep=".")
se <- se[,order(colData(se)$batch, colData(se)$genotype, colnames(se))]
metadata(se)$annotation = "Salmon 0.9.1 (-l A) on GENCODE 27"
saveRDS(se, "neurons_and_iso_RNAseq.transcriptLevel.SE.rds")
se <- se[which(rowData(se)$biotype %in% c("lincRNA","protein_coding")),]
rowData(se)$stable_gid <- sapply(as.character(rowData(se)$gene_id), FUN=function(x){ strsplit(x,".",fixed=T)[[1]][[1]]})
rowData(se)$gid <- paste(rowData(se)$stable_gid, rowData(se)$gene_name, sep=".")
cnts <- plag(assay(se, "counts"),rowData(se)$gid)
tpm <- plag(assay(se, "tpm"),rowData(se)$gid)
glen <- plag(rowData(se)$length, rowData(se)$gid, agFun=max)
gpc <- plag(rowData(se)$biotype, rowData(se)$gid, agFun=function(x){ any(x=="protein_coding") })
rd <- as.data.frame(rowData(se)[,c("gene_id","stable_gid","gene_name")])
for(v in colnames(rd)) rd[[v]] <- as.character(rd[[v]])
gids <- plag(rd, rowData(se)$gid, agFun=function(x) x[[1]])
se <- SummarizedExperiment( assays = list(counts=cnts, tpm=tpm), colData=colData(se), rowData=cbind(gids, gpc, glen))
saveRDS(se, "neurons_and_iso_RNAseq.geneLevel.SE.rds")
se$batch
test <- split(se,se$batch)
ses <- lapply(levels(se$batch), FUN=function(x){ se[,which(se$batch==x)]})
names(ses)
ses[[1]]
levels(se$batch)
